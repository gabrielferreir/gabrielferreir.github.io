{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","Layout","_ref","children","className","charSet","to","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,wGCTJ,IAAAP,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAS,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAA,EAAA,KAmCec,IA5BA,SAAAC,GAAgB,IAAdC,EAAcD,EAAdC,SAEb,OACIZ,EAAAK,EAAAC,cAAA,OAAKO,UAAU,WACXb,EAAAK,EAAAC,cAACG,EAAA,OAAD,KACIT,EAAAK,EAAAC,cAAA,QAAMQ,QAAQ,UACdd,EAAAK,EAAAC,cAAA,kCAEJN,EAAAK,EAAAC,cAAA,SAAOO,UAAU,UACbb,EAAAK,EAAAC,cAACE,EAAA,KAAD,CAAMO,GAAI,KACNf,EAAAK,EAAAC,cAAA,UAAQO,UAAU,kBACdb,EAAAK,EAAAC,cAAA,OAAKO,UAAU,kBACfb,EAAAK,EAAAC,cAAA,WACIN,EAAAK,EAAAC,cAAA,MAAIO,UAAU,gBAAd,oBACAb,EAAAK,EAAAC,cAAA,MAAIO,UAAU,gBAAd,2BAKhBb,EAAAK,EAAAC,cAAA,QAAMO,UAAU,QAAQD,sFCrBpC,SAASI,EAATL,GAAiD,IAAlCM,EAAkCN,EAAlCM,YAAaC,EAAqBP,EAArBO,KAAMC,EAAeR,EAAfQ,KAAMZ,EAASI,EAATJ,MAC9Ba,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAApB,EAAAC,cAACoB,EAAArB,EAAD,CACEsB,eAAgB,CACdT,QAEFX,MAAOA,EACPqB,cAAa,QAAUR,EAAKI,aAAajB,MACzCY,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASvB,GAEX,CACEwB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASvB,GAEX,CACEsB,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAI,QACJC,KAAM,GACNF,YAAW,IAUED","file":"component---src-pages-404-js-8b588a85b0a8e74774ff.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {Link} from \"gatsby\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({children}) => {\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Gabriel Ferreira</title>\r\n            </Helmet>\r\n            <aside className='navbar'>\r\n                <Link to={'/'}>\r\n                    <header className='navbar__header'>\r\n                        <div className='navbar__image'></div>\r\n                        <div>\r\n                            <h1 className='navbar__name'>Gabriel Ferreira</h1>\r\n                            <h2 className='navbar__work'>Fullstack Developer</h2>\r\n                        </div>\r\n                    </header>\r\n                </Link>\r\n            </aside>\r\n            <main className='main'>{children}</main>\r\n        </div>\r\n    )\r\n};\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `pt-br`,\r\n  meta: [],\r\n  description: ``,\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}