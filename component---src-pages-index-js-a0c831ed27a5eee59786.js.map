{"version":3,"sources":["webpack:///./src/components/post.js","webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["toDate","date","formatedDate","Date","getDate","nameMonth","getMonth","month","Post","_ref","path","title","image","description","react_default","a","createElement","gatsby_browser_entry","to","className","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","frontmatter","map","components_post","excerpt","layout","seo","meta","keywords","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","Layout","children","charSet","SEO","lang","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-a0c831ed27a5eee59786.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport \"./post.css\"\n\nconst Post = ({ path, image, title, description, date }) => {\n  return (\n    <Link to={path}>\n      <div className=\"post\">\n        <div className=\"post__content\">\n          <h1 className=\"post__data\">{toDate(date)}</h1>\n          <h1 className=\"post__title\">{title}</h1>\n          <h2 className=\"post__description\">{description}</h2>\n        </div>\n        {/*<img className='post__image' src={image}/>*/}\n      </div>\n    </Link>\n  )\n}\n\nconst toDate = date => {\n  const formatedDate = new Date(date)\n  return `${formatedDate.getDate()}/${nameMonth(formatedDate.getMonth())}`\n}\n\nconst nameMonth = month => {\n  switch (month) {\n    case 0:\n      return \"JAN\"\n    case 1:\n      return \"FEV\"\n    case 2:\n      return \"MAR\"\n    case 3:\n      return \"ABR\"\n    case 4:\n      return \"MAI\"\n    case 5:\n      return \"JUN\"\n    case 6:\n      return \"JUL\"\n    case 7:\n      return \"AGO\"\n    case 8:\n      return \"SET\"\n    case 9:\n      return \"OUT\"\n    case 10:\n      return \"NOV\"\n    case 11:\n      return \"DEZ\"\n  }\n}\n\nPost.propTypes = {\n  path: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n}\n\nexport default Post\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Post from \"../components/post\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({\n                       data: {\n                           allMarkdownRemark: { edges },\n                       },\n                   }) => {\n    const Posts = edges\n        .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n        .map(edge => {\n            return (\n                <Post\n                    path={edge.node.frontmatter.path}\n                    /* image={edge.node.frontmatter.image}*/\n                    description={edge.node.excerpt}\n                    title={edge.node.frontmatter.title}\n                    date={edge.node.frontmatter.date}\n                />\n            )\n        })\n\n    return (\n        <Layout>\n            <SEO\n                title=\"gabrielferreir.github.io\"\n                description=\"Um Blog com posts sobre Flutter, Javascript, BLOC, React e outras tecnologias.\"\n                meta={[\n                    {\n                        keywords:\n                            \"Blog, Flutter, Gabriel Ferreira, BLOC, Javascript, React\",\n                    },\n                ]}\n            />\n            {Posts}\n        </Layout>\n    )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query MyQuery {\n    allMarkdownRemark {\n      edges {\n        node {\n          id\n          frontmatter {\n            date\n            path\n            title\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\n\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  return (\n    <div className=\"wrapper\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Gabriel Ferreira</title>\n      </Helmet>\n      <aside className=\"navbar\">\n        <Link to={\"/\"}>\n          <header className=\"navbar__header\">\n            <div className=\"navbar__image\"></div>\n            <div>\n              <h1 className=\"navbar__name\">Gabriel Ferreira</h1>\n              <h2 className=\"navbar__work\">Fullstack Developer</h2>\n            </div>\n          </header>\n        </Link>\n      </aside>\n      <main className=\"main\">{children}</main>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `pt-br`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}