{"version":3,"sources":["webpack:///./src/components/post.js","webpack:///./src/pages/index.js"],"names":["toDate","date","formatedDate","Date","getDate","toString","padStart","getMonth","getFullYear","Post","path","title","description","to","className","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","frontmatter","map","excerpt","meta","keywords"],"mappings":"mJAqBMA,G,UAAS,SAAAC,GACX,IAAMC,EAAe,IAAIC,KAAKF,GAC9B,OAAUC,EAAaE,UAAUC,WAAWC,SAAS,EAAG,KAAxD,IAAgEJ,EAAaK,WAAWF,WAAWC,SAAS,EAAG,KAA/G,IAAuHJ,EAAaM,gBAWzHC,EA5BF,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,YAAaX,EAAU,EAAVA,KACrC,OACI,kBAAC,OAAD,CAAMY,GAAIH,GACN,yBAAKI,UAAU,QACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,cAAcd,EAAOC,IACnC,wBAAIa,UAAU,eAAeH,GAC7B,wBAAIG,UAAU,qBAAqBF,O,YC6BxCG,UApCG,SAAC,GAIO,IAChBC,EADe,EAHFC,KACIC,kBAAqBC,MAIvCC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYtB,QACvCuB,KAAI,SAAAH,GACD,OACI,kBAAC,EAAD,CACIX,KAAMW,EAAKC,KAAKC,YAAYb,KAE5BE,YAAaS,EAAKC,KAAKG,QACvBd,MAAOU,EAAKC,KAAKC,YAAYZ,MAC7BV,KAAMoB,EAAKC,KAAKC,YAAYtB,UAK5C,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIU,MAAM,2BACNC,YAAY,iFACZc,KAAM,CACF,CACIC,SACI,+DAIfX,K","file":"component---src-pages-index-js-32f5baffcb89e9b1f068.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Link} from \"gatsby\"\n\nimport \"./post.css\"\n\nconst Post = ({path, title, description, date}) => {\n    return (\n        <Link to={path}>\n            <div className=\"post\">\n                <div className=\"post__content\">\n                    <h1 className=\"post__data\">{toDate(date)}</h1>\n                    <h1 className=\"post__title\">{title}</h1>\n                    <h2 className=\"post__description\">{description}</h2>\n                </div>\n                {/*<img className='post__image' src={image}/>*/}\n            </div>\n        </Link>\n    )\n}\n\nconst toDate = date => {\n    const formatedDate = new Date(date)\n    return `${formatedDate.getDate().toString().padStart(2, '0')}/${formatedDate.getMonth().toString().padStart(2, '0')}/${formatedDate.getFullYear()}`\n}\n\nPost.propTypes = {\n    path: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n}\n\nexport default Post\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Post from \"../components/post\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({\n                       data: {\n                           allMarkdownRemark: { edges },\n                       },\n                   }) => {\n    const Posts = edges\n        .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n        .map(edge => {\n            return (\n                <Post\n                    path={edge.node.frontmatter.path}\n                    /* image={edge.node.frontmatter.image}*/\n                    description={edge.node.excerpt}\n                    title={edge.node.frontmatter.title}\n                    date={edge.node.frontmatter.date}\n                />\n            )\n        })\n\n    return (\n        <Layout>\n            <SEO\n                title=\"gabrielferreir.github.io\"\n                description=\"Um Blog com posts sobre Flutter, Javascript, BLOC, React e outras tecnologias.\"\n                meta={[\n                    {\n                        keywords:\n                            \"Blog, Flutter, Gabriel Ferreira, BLOC, Javascript, React\",\n                    },\n                ]}\n            />\n            {Posts}\n        </Layout>\n    )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query MyQuery {\n    allMarkdownRemark {\n      edges {\n        node {\n          id\n          frontmatter {\n            date\n            path\n            title\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}