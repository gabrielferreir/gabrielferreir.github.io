{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_ref","markdownRemark","data","frontmatter","html","excerpt","console","log","a","createElement","title","description","charSet","className","date","dangerouslySetInnerHTML","__html","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","Layout","children","to","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,GAAAT,EAAA,KAAAA,EAAA,MAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAQe,SAASI,EAATQ,GAEqB,IACzBC,EADyBD,EADCE,KAE1BD,eACAE,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,QAE1B,OADAC,QAAQC,IAAI,iBAAkBN,GAE1BN,EAAAa,EAAAC,cAACZ,EAAA,EAAD,KACIF,EAAAa,EAAAC,cAACV,EAAA,EAAD,CACIW,MAAOP,EAAYO,MACnBC,YAAaN,IAEjBV,EAAAa,EAAAC,cAACX,EAAA,OAAD,KACIH,EAAAa,EAAAC,cAAA,QAAMG,QAAQ,UACdjB,EAAAa,EAAAC,cAAA,aAAQN,EAAYO,QAExBf,EAAAa,EAAAC,cAAA,OAAKI,UAAU,uBACXlB,EAAAa,EAAAC,cAAA,OAAKI,UAAU,aACXlB,EAAAa,EAAAC,cAAA,UAAKN,EAAYO,OACjBf,EAAAa,EAAAC,cAAA,OAAKI,UAAU,QAAQV,EAAYW,MACnCnB,EAAAa,EAAAC,cAAA,OACII,UAAU,oBACVE,wBAAyB,CAACC,OAAQZ,QAOnD,IAAMX,EAAS,+CCrCtB,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAuB,EAAA7B,EAAA,KAAA8B,EAAA9B,EAAA,KAAAA,EAAA,KAmCe+B,IA5BA,SAAAnB,GAAgB,IAAdoB,EAAcpB,EAAdoB,SAEb,OACIzB,EAAAa,EAAAC,cAAA,OAAKI,UAAU,WACXlB,EAAAa,EAAAC,cAACS,EAAA,OAAD,KACIvB,EAAAa,EAAAC,cAAA,QAAMG,QAAQ,UACdjB,EAAAa,EAAAC,cAAA,kCAEJd,EAAAa,EAAAC,cAAA,SAAOI,UAAU,UACblB,EAAAa,EAAAC,cAACQ,EAAA,KAAD,CAAMI,GAAI,KACN1B,EAAAa,EAAAC,cAAA,UAAQI,UAAU,kBACdlB,EAAAa,EAAAC,cAAA,OAAKI,UAAU,kBACflB,EAAAa,EAAAC,cAAA,WACId,EAAAa,EAAAC,cAAA,MAAII,UAAU,gBAAd,oBACAlB,EAAAa,EAAAC,cAAA,MAAII,UAAU,gBAAd,2BAKhBlB,EAAAa,EAAAC,cAAA,QAAMI,UAAU,QAAQO,sFCrBpC,SAASE,EAATtB,GAAiD,IAAlCW,EAAkCX,EAAlCW,YAAaY,EAAqBvB,EAArBuB,KAAMC,EAAexB,EAAfwB,KAAMd,EAASV,EAATU,MAC9Be,EADuCC,EAAAxB,KACvCuB,KAcFE,EAAkBhB,GAAec,EAAKG,aAAajB,YAEzD,OACEkB,EAAArB,EAAAC,cAACqB,EAAAtB,EAAD,CACEuB,eAAgB,CACdR,QAEFb,MAAOA,EACPsB,cAAa,QAAUP,EAAKG,aAAalB,MACzCc,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASxB,GAEX,CACEyB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASxB,GAEX,CACEuB,KAAI,sBACJC,QAASP,IAEXU,OAAOb,KAKfF,EAAIgB,aAAe,CACjBf,KAAI,QACJC,KAAM,GACNb,YAAW,IAUEW","file":"component---src-templates-blog-template-js-85cf95e6ce9926c24e43.js","sourcesContent":["import React from \"react\"\r\nimport {graphql} from \"gatsby\"\r\n\r\nimport \"./blogTemplate.css\"\r\nimport Layout from \"../components/layout\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport SEO from \"../components/seo\";\r\n\r\nexport default function Template({\r\n                                     data, // this prop will be injected by the GraphQL query below.\r\n                                 }) {\r\n    const {markdownRemark} = data; // data.markdownRemark holds our post data\r\n    const {frontmatter, html, excerpt} = markdownRemark;\r\n    console.log('markdownRemark', markdownRemark);\r\n    return (\r\n        <Layout>\r\n            <SEO\r\n                title={frontmatter.title}\r\n                description={excerpt}\r\n            />\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\"/>\r\n                <title>{frontmatter.title}</title>\r\n            </Helmet>\r\n            <div className=\"blog-post-container\">\r\n                <div className=\"blog-post\">\r\n                    <h1>{frontmatter.title}</h1>\r\n                    <div className='date'>{frontmatter.date}</div>\r\n                    <div\r\n                        className=\"blog-post-content\"\r\n                        dangerouslySetInnerHTML={{__html: html}}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        path\r\n        title\r\n      }\r\n      excerpt\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {Link} from \"gatsby\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({children}) => {\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Gabriel Ferreira</title>\r\n            </Helmet>\r\n            <aside className='navbar'>\r\n                <Link to={'/'}>\r\n                    <header className='navbar__header'>\r\n                        <div className='navbar__image'></div>\r\n                        <div>\r\n                            <h1 className='navbar__name'>Gabriel Ferreira</h1>\r\n                            <h2 className='navbar__work'>Fullstack Developer</h2>\r\n                        </div>\r\n                    </header>\r\n                </Link>\r\n            </aside>\r\n            <main className='main'>{children}</main>\r\n        </div>\r\n    )\r\n};\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `pt-br`,\r\n  meta: [],\r\n  description: ``,\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}