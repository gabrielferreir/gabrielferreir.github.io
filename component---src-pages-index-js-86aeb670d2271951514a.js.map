{"version":3,"sources":["webpack:///./src/components/post.js","webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["toDate","date","formatedDate","Date","getDate","nameMonth","getMonth","month","Post","_ref","path","title","image","description","react_default","a","createElement","gatsby_browser_entry","to","className","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","frontmatter","map","console","log","components_post","excerpt","layout","seo","meta","keywords","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","Layout","children","charSet","SEO","lang","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-86aeb670d2271951514a.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {Link} from \"gatsby\"\r\n\r\n\r\nimport \"./post.css\"\r\n\r\nconst Post = ({path, image, title, description, date}) => {\r\n\r\n    return (\r\n        <Link to={path} >\r\n            <div className='post'>\r\n                <div className='post__content'>\r\n                    <h1 className='post__data'>{toDate(date)}</h1>\r\n                    <h1 className='post__title'>{title}</h1>\r\n                    <h2 className='post__description'>{description}</h2>\r\n                </div>\r\n                {/*<img className='post__image' src={image}/>*/}\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst toDate = (date) => {\r\n    const formatedDate = new Date(date);\r\n    return `${formatedDate.getDate()}/${nameMonth(formatedDate.getMonth())}`;\r\n}\r\n\r\nconst nameMonth = month => {\r\n    switch (month) {\r\n        case 0:\r\n            return 'JAN';\r\n        case 1:\r\n            return 'FEV';\r\n        case 2:\r\n            return 'MAR';\r\n        case 3:\r\n            return 'ABR';\r\n        case 4:\r\n            return 'MAI';\r\n        case 5:\r\n            return 'JUN';\r\n        case 6:\r\n            return 'JUL';\r\n        case 7:\r\n            return 'AGO';\r\n        case 8:\r\n            return 'SET';\r\n        case 9:\r\n            return 'OUT';\r\n        case 10:\r\n            return 'NOV';\r\n        case 11:\r\n            return 'DEZ';\r\n    }\r\n}\r\n\r\nPost.propTypes = {\r\n    path: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Post\r\n","import React from \"react\"\r\nimport {graphql} from \"gatsby\"\r\nimport Layout from \"../components/layout\";\r\nimport Post from \"../components/post\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst IndexPage = ({\r\n                       data: {\r\n                           allMarkdownRemark: {edges},\r\n                       },\r\n                   }) => {\r\n    const Posts = edges\r\n        .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\r\n        .map(edge => {\r\n            console.log(edge);\r\n            return (\r\n                <Post path={edge.node.frontmatter.path}\r\n                      image={edge.node.frontmatter.image}\r\n                      description={edge.node.excerpt}\r\n                      title={edge.node.frontmatter.title}\r\n                      date={edge.node.frontmatter.date}\r\n\r\n                />\r\n            );\r\n        });\r\n\r\n    return <Layout>\r\n        <SEO title=\"gabrielferreir.github.io\"\r\n             description=\"Um Blog com posts sobre Flutter, Javascript, BLOC, React e outras tecnologias.\"\r\n             meta={[{\r\n                 'keywords': 'Blog, Flutter, Gabriel Ferreira, BLOC, Javascript, React'\r\n             }]}\r\n        />\r\n        {Posts}\r\n    </Layout>\r\n};\r\n\r\nexport default IndexPage\r\n\r\nexport const pageQuery = graphql`\r\nquery MyQuery {\r\n  allMarkdownRemark {\r\n    edges {\r\n      node {\r\n        id\r\n        frontmatter {\r\n          image\r\n          date\r\n          path\r\n          title\r\n        }\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {Link} from \"gatsby\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({children}) => {\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Gabriel Ferreira</title>\r\n            </Helmet>\r\n            <aside className='navbar'>\r\n                <Link to={'/'}>\r\n                    <header className='navbar__header'>\r\n                        <div className='navbar__image'></div>\r\n                        <div>\r\n                            <h1 className='navbar__name'>Gabriel Ferreira</h1>\r\n                            <h2 className='navbar__work'>Fullstack Developer</h2>\r\n                        </div>\r\n                    </header>\r\n                </Link>\r\n            </aside>\r\n            <main className='main'>{children}</main>\r\n        </div>\r\n    )\r\n};\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `pt-br`,\r\n  meta: [],\r\n  description: ``,\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}