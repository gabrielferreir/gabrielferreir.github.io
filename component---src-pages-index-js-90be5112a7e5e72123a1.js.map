{"version":3,"sources":["webpack:///./src/components/post.js","webpack:///./src/pages/index.js","webpack:///./src/components/layout.js"],"names":["toDate","date","formatedDate","Date","getDate","nameMonth","getMonth","month","Post","_ref","path","title","image","description","react_default","a","createElement","className","onClick","navigate","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","frontmatter","map","console","log","components_post","excerpt","layout","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Layout","children"],"mappings":"+IAuBMA,UAAS,SAACC,GACZ,IAAMC,EAAe,IAAIC,KAAKF,GAC9B,OAAUC,EAAaE,UAAvB,IAAoCC,EAAUH,EAAaI,cAGzDD,EAAY,SAAAE,GACd,OAAQA,GACJ,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,GACD,MAAO,MACX,KAAK,GACD,MAAO,QAYJC,EA1DF,SAAAC,GAA6C,IAA3CC,EAA2CD,EAA3CC,KAAaC,GAA8BF,EAArCG,MAAqCH,EAA9BE,OAAOE,EAAuBJ,EAAvBI,YAAaZ,EAAUQ,EAAVR,KAE5C,OACIa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,WAC3BC,mBAAST,KAETI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcjB,EAAOC,IACnCa,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeN,GAC7BG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAqBJ,MChBnDO,EAAAC,EAAAC,EAAA,8BAAAC,IAiCeC,UA5BG,SAAAf,GAIO,IACfgB,EADehB,EAHFiB,KACIC,kBAAoBC,MAItCC,OAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAY/B,OACvCgC,IAAI,SAAAH,GAED,OADAI,QAAQC,IAAIL,GAERhB,EAAAC,EAAAC,cAACoB,EAAD,CAAQ1B,KAAMoB,EAAKC,KAAKC,YAAYtB,KAC5BE,MAAOkB,EAAKC,KAAKC,YAAYpB,MAC7BC,YAAaiB,EAAKC,KAAKM,QACvB1B,MAAOmB,EAAKC,KAAKC,YAAYrB,MAC7BV,KAAM6B,EAAKC,KAAKC,YAAY/B,SAWhD,OAAOa,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KAASb,IAzBpB,IA8BaF,EAAS,+CCnCtB,IAAAgB,EAAAnB,EAAA,GAAAoB,EAAApB,EAAAqB,EAAAF,GAAAnB,EAAA,KA2BesB,IAtBA,SAAAjC,GAAgB,IAAdkC,EAAclC,EAAdkC,SAEb,OACIH,EAAAzB,EAAAC,cAAA,OAAKC,UAAU,WACXuB,EAAAzB,EAAAC,cAAA,SAAOC,UAAU,UACbuB,EAAAzB,EAAAC,cAAA,UAAQC,UAAU,kBACduB,EAAAzB,EAAAC,cAAA,OAAKC,UAAU,kBACfuB,EAAAzB,EAAAC,cAAA,WACIwB,EAAAzB,EAAAC,cAAA,MAAIC,UAAU,gBAAd,oBACAuB,EAAAzB,EAAAC,cAAA,MAAIC,UAAU,gBAAd,0BAIZuB,EAAAzB,EAAAC,cAAA,QAAMC,UAAU,QAAQ0B","file":"component---src-pages-index-js-90be5112a7e5e72123a1.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {Link} from \"gatsby\"\r\nimport {navigate} from '@reach/router';\r\n\r\nimport \"./post.css\"\r\n\r\nconst Post = ({path, image, title, description, date}) => {\r\n\r\n    return (\r\n        <div className='post' onClick={() => {\r\n            navigate(path)\r\n        }}>\r\n            <div className='post__content'>\r\n                <h1 className='post__data'>{toDate(date)}</h1>\r\n                <h1 className='post__title'>{title}</h1>\r\n                <h2 className='post__description'>{description}</h2>\r\n            </div>\r\n            {/*<img className='post__image' src={image}/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst toDate = (date) => {\r\n    const formatedDate = new Date(date);\r\n    return `${formatedDate.getDate()}/${nameMonth(formatedDate.getMonth())}`;\r\n}\r\n\r\nconst nameMonth = month => {\r\n    switch (month) {\r\n        case 0:\r\n            return 'JAN';\r\n        case 1:\r\n            return 'FEV';\r\n        case 2:\r\n            return 'MAR';\r\n        case 3:\r\n            return 'ABR';\r\n        case 4:\r\n            return 'MAI';\r\n        case 5:\r\n            return 'JUN';\r\n        case 6:\r\n            return 'JUL';\r\n        case 7:\r\n            return 'AGO';\r\n        case 8:\r\n            return 'SET';\r\n        case 9:\r\n            return 'OUT';\r\n        case 10:\r\n            return 'NOV';\r\n        case 11:\r\n            return 'DEZ';\r\n    }\r\n}\r\n\r\nPost.propTypes = {\r\n    path: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Post\r\n","import React from \"react\"\r\nimport {graphql} from \"gatsby\"\r\nimport Layout from \"../components/layout\";\r\nimport Post from \"../components/post\";\r\n\r\nconst IndexPage = ({\r\n                       data: {\r\n                           allMarkdownRemark: {edges},\r\n                       },\r\n                   }) => {\r\n    const Posts = edges\r\n        .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\r\n        .map(edge => {\r\n            console.log(edge);\r\n            return (\r\n                <Post   path={edge.node.frontmatter.path}\r\n                        image={edge.node.frontmatter.image}\r\n                        description={edge.node.excerpt}\r\n                        title={edge.node.frontmatter.title}\r\n                        date={edge.node.frontmatter.date}\r\n\r\n                />\r\n                // <Link to={edge.node.frontmatter.path}>\r\n                //     <h1>{edge.node.frontmatter.title}</h1>\r\n                //     <img src={edge.node.frontmatter.image} />\r\n                //     <div>{`${edge.node.excerpt}`}</div>\r\n                // </Link>\r\n        );\r\n        });\r\n\r\n    return <Layout>{Posts}</Layout>\r\n};\r\n\r\nexport default IndexPage\r\n\r\nexport const pageQuery = graphql`\r\nquery MyQuery {\r\n  allMarkdownRemark {\r\n    edges {\r\n      node {\r\n        id\r\n        frontmatter {\r\n          image\r\n          date\r\n          path\r\n          title\r\n        }\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({children}) => {\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <aside className='navbar'>\r\n                <header className='navbar__header'>\r\n                    <div className='navbar__image'></div>\r\n                    <div>\r\n                        <h1 className='navbar__name'>Gabriel Ferreira</h1>\r\n                        <h2 className='navbar__work'>Fullstack Developer</h2>\r\n                    </div>\r\n                </header>\r\n            </aside>\r\n            <main className='main'>{children}</main>\r\n        </div>\r\n    )\r\n};\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}